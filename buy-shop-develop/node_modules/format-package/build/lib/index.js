"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.defaults = void 0;
const defaults = require("./defaults");
exports.defaults = defaults;
const sort_1 = require("./sort");
const transform_1 = require("./transform");
const validate_1 = require("./validate");
function format(pkg, options = {}, filePath) {
    return __awaiter(this, void 0, void 0, function* () {
        const { order, transformations, formatter } = Object.assign(Object.assign({}, defaults), options);
        const sortedKeys = sort_1.default(Object.keys(pkg), order);
        const transformedPkg = yield Promise.all(sortedKeys.map((key) => transform_1.default(key, pkg[key], transformations)));
        const nextPkg = transformedPkg.reduce((obj, [key, value]) => Object.assign(obj, { [key]: value }), {});
        validate_1.default(pkg, nextPkg);
        return formatter(nextPkg, filePath);
    });
}
exports.default = format;
//# sourceMappingURL=index.js.map