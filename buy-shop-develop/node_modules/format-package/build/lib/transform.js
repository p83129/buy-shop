"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const object_1 = require("../utils/object");
// All transformers receive:
//   * the key they matched on
//   * the value in package.json (if any)
//
// Return a new key and value to be stored
function transform(prevKey, prevValue, transformations = {}) {
    return __awaiter(this, void 0, void 0, function* () {
        let nextKey = prevKey;
        let nextValue = prevValue;
        if (object_1.has(transformations, prevKey)) {
            [nextKey, nextValue] = yield transformations[prevKey](prevKey, prevValue);
        }
        else if (typeof prevValue === 'object') {
            nextValue = yield object_1.alphabetize(prevValue);
        }
        return [nextKey, nextValue];
    });
}
exports.default = transform;
//# sourceMappingURL=transform.js.map